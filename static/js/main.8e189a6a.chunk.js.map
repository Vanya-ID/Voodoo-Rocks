{"version":3,"sources":["n1-main/m3-dal/posts-api.ts","n1-main/m1-ui/u2-componemts/Posts/post-reducer.ts","n1-main/m1-ui/u3-common/SuperSelect.tsx","n1-main/m1-ui/u2-componemts/Posts/Posts.tsx","n1-main/m1-ui/u1-app/App.tsx","reportWebVitals.ts","n1-main/m2-bll/store/redux-store.ts","index.tsx","n1-main/m1-ui/u2-componemts/Posts/Posts.module.css","n1-main/m1-ui/u3-common/MySelect.module.css"],"names":["instance","axios","create","baseURL","withCredentials","postsAPI","userId","get","usersAPI","initialState","posts","users","fetchPostsTC","dispatch","then","res","type","data","Option","Select","MySelect","props","dropdownClassName","style","select","onChange","o","setValue","showSearch","width","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","value","options","map","i","className","Posts","useSelector","state","useDispatch","useState","useEffect","u","name","postsBox","search","button","onClick","found","filter","trim","id","icon","SearchOutlined","main","p","author","find","el","authorName","split","l","postItem","post_container","title","body","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8e189a6a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://jsonplaceholder.typicode.com/',\r\n    withCredentials: true\r\n})\r\n\r\n//api\r\nexport const postsAPI = {\r\n    getPosts(userId?: string | number) {\r\n        return instance.get('posts' + (userId ? '?userId=' + userId : ''))\r\n    }\r\n}\r\nexport const usersAPI = {\r\n    getUsers() {\r\n        return instance.get('users')\r\n    }\r\n}","import {postsAPI, usersAPI} from \"../../../m3-dal/posts-api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initialState = {\r\n    posts: [] as Array<PostsType>,\r\n    users: [] as Array<UsersType>\r\n}\r\n\r\nexport type UsersType = {\r\n    id: number\r\n    name: string\r\n    username: string\r\n    email: string\r\n    address: AddressType\r\n    phone: string\r\n    website: string\r\n    company: CompanyType\r\n}\r\ntype AddressType = {\r\n    street: string\r\n    suite: string\r\n    city: string\r\n    zipcode: string\r\n    geo: {\r\n        lat: string\r\n        lng: string\r\n    }\r\n}\r\ntype CompanyType = {\r\n    name: string\r\n    catchPhrase: string\r\n    bs: string\r\n}\r\ntype InitStateType = typeof initialState\r\n\r\nexport const postReducer = (state = initialState, action: ActionTypes): InitStateType => {\r\n    switch (action.type) {\r\n        case \"SET-POSTS\": {\r\n            return {\r\n                ...state,\r\n                posts: action.posts\r\n            }\r\n        }\r\n        case \"SET-USERS\": {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Actions\r\nexport const setPostsAC = (posts: Array<PostsType>) => ({type: 'SET-POSTS', posts} as const)\r\nexport const setUsersAC = (users: Array<UsersType>) => ({type: 'SET-USERS', users} as const)\r\n\r\n// Thunks\r\nexport const fetchPostsTC = (userId?: string | number) => {\r\n    return (dispatch: Dispatch) => {\r\n        postsAPI.getPosts(userId)\r\n            .then((res) => {\r\n                dispatch(setPostsAC(res.data))\r\n            })\r\n    }\r\n}\r\nexport const fetchUsersTC = () => {\r\n    return (dispatch: Dispatch) => {\r\n        usersAPI.getUsers()\r\n            .then((res) => {\r\n                dispatch(setUsersAC(res.data))\r\n            })\r\n    }\r\n}\r\n\r\n// Types\r\nexport type PostsType = {\r\n    userId: number\r\n    id: number\r\n    title: string\r\n    body: string\r\n}\r\n\r\nexport type ActionTypes =\r\n    | ReturnType<typeof setPostsAC>\r\n    | ReturnType<typeof setUsersAC>\r\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport {Select} from 'antd';\nimport style from \"./MySelect.module.css\"\n\nconst {Option} = Select;\n\ntype MySelectType = {\n    setValue: (o: string) => void\n    options: string[]\n}\n\nexport const MySelect = (props: MySelectType) => {\n\n    const onChange = (o: string) => {\n        props.setValue(o)\n    }\n\n    return <Select\n        dropdownClassName={style.select}\n        onChange={onChange}\n        showSearch\n        style={{width: 200}}\n        placeholder=\"Search to Select\"\n        optionFilterProp=\"children\"\n        filterOption={(input, option) =>\n            option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n        filterSort={(optionA, optionB) =>\n            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n        }\n    >\n        <Option value={''}> </Option>\n        {\n            props.options.map((o: string, i: number) => <Option\n                key={i}\n                value={o}\n                className={style.option}\n            >\n                {o}</Option>)\n        }\n    </Select>\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store/redux-store\";\r\nimport {fetchPostsTC, fetchUsersTC, PostsType, UsersType} from \"./post-reducer\";\r\nimport {useEffect, useState} from \"react\";\r\nimport style from './Posts.module.css'\r\nimport {MySelect} from \"../../u3-common/SuperSelect\";\r\nimport {SearchOutlined} from \"@ant-design/icons\";\r\nimport {Button} from \"antd\";\r\n\r\nexport const Posts = () => {\r\n    let posts = useSelector<AppRootStateType, Array<PostsType>>(state => state.posts.posts)\r\n    const users = useSelector<AppRootStateType, Array<UsersType>>(state => state.posts.users)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPostsTC())\r\n        dispatch(fetchUsersTC())\r\n    }, [])\r\n\r\n    const fetchFiltered = () => {\r\n        let found = users.filter(u => u.name.toLowerCase().indexOf(value?.toLowerCase().trim()) >= 0)\r\n        if (value && found[0]?.id) {\r\n            dispatch(fetchPostsTC(found[0]?.id))\r\n        } else {\r\n            dispatch(fetchPostsTC())\r\n        }\r\n        setValue('')\r\n    }\r\n\r\n    const options = users.map(u => u.name)\r\n    return (\r\n        <div className={style.postsBox}>\r\n            <div className={style.search}>\r\n                <MySelect setValue={setValue} options={options}/>\r\n                <Button className={style.button} onClick={fetchFiltered} icon={<SearchOutlined/>}>Search</Button>\r\n            </div>\r\n            <div className={style.main}>\r\n                {\r\n                    posts?.map((p) => {\r\n                        const author = users.find(el => el.id === p.userId)\r\n                        const authorName = author ?\r\n                            (author.name.split('').map( (l, i) => <span key={i}>{l}</span>))\r\n                            : 'Mr. Anonymous'\r\n                        return (\r\n                            <div key={p.id} className={style.postItem}>\r\n                                <div className={style.post_container}>\r\n                                    <h3>{p.title}</h3>\r\n                                    <p>{p.body}</p>\r\n                                    <div className={style.author}>©  {authorName}</div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Posts} from \"../u2-componemts/Posts/Posts\";\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n           <Posts/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {postReducer} from \"../../m1-ui/u2-componemts/Posts/post-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    posts: postReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/u1-app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./n1-main/m2-bll/store/redux-store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBox\":\"Posts_postsBox__2qpXJ\",\"search\":\"Posts_search__3QuVf\",\"main\":\"Posts_main__1A_pH\",\"postItem\":\"Posts_postItem__2GUko\",\"post_container\":\"Posts_post_container__FhnsM\",\"author\":\"Posts_author__3CnKz\",\"button\":\"Posts_button__3-Rar\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"MySelect_select__3f7Ka\",\"option\":\"MySelect_option__1Zkcm\"};"],"sourceRoot":""}